/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;

import java.sql.*;
import clases.Conexion;


//librerias para la tabla
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

//librerias para interactuar con la tabla
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Yader Jr
 */
public class GestionarClientes extends javax.swing.JFrame {

    /**
     * Creates new form GestionarClientes
     */
    
    String user;
    //variable para enviar datos entre interfaces tipo static y encapsulamiento publico
    //servira para saber cual es el usuario que se esta consultando
  //  public static String user_update = "";
    
    public static int IDCliente_update = 0;
    
    DefaultTableModel model = new DefaultTableModel();
    
    public GestionarClientes() {
        initComponents();
        
        user = Login.user;
        
        setSize(630,330);
        setTitle("Clientes registrados - sesión de "+user);
        setResizable(false);
        setLocationRelativeTo(null);
        
        //metodo para que no se cierre todo el programa cuando se cierra esta interfaz
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
           ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");

        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(), label_wallpaper.getHeight(),
                Image.SCALE_DEFAULT));

        label_wallpaper.setIcon(icono);

        this.repaint();
        
        try
        {
            
            Connection cn = Conexion.db();
            PreparedStatement pst = cn.prepareStatement("select id_cliente, nombre_cliente, email_cliente, tel_cliente, ultima_modificacion from clientes");
            
            ResultSet rs = pst.executeQuery();
            
            table_clientes_registrados = new JTable(model);
            
            jScrollPane1.setViewportView(table_clientes_registrados);
            
            model.addColumn("");
            model.addColumn("Nombre");
            model.addColumn("Email");
            model.addColumn("Teléfono");
            model.addColumn("Modificado por");
            
           while (rs.next())
            {
                
                Object[] fila = new Object[5]; 
                
                for (int i = 0; i < 5; i++)
                {
                    
                    fila[i] = rs.getObject(i+1);
                    
                }
                model.addRow(fila);
            }
           cn.close();
            
        } catch (SQLException e)
        {
            System.err.println("Error en mostrar los clientes en la tabla"+e);
            JOptionPane.showMessageDialog(null, "Error en cargar datos de los clientes registrados, contacte al administrador");
        }
        
        table_clientes_registrados.addMouseListener(new MouseAdapter(){
            
            @Override
            public void mouseClicked(MouseEvent e){
                
                int fila_point = table_clientes_registrados.rowAtPoint(e.getPoint());
                
                int columna_point = 0;
                
                if (fila_point>-1)
                {
                    IDCliente_update = (int) model.getValueAt(fila_point, columna_point);
                    
                    JOptionPane.showMessageDialog(null, "El id del cliente seleccionado es: "+IDCliente_update);
                    
                    InformacionCliente informacion_cliente = new InformacionCliente();
                    
                    informacion_cliente.setVisible(true);
                    
                    
                }
                
            }
        
        
    });
        
        
    }
    
    
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_clientes_registrados = new javax.swing.JTable();
        label_header = new javax.swing.JLabel();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_clientes_registrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_clientes_registrados);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 630, 180));

        label_header.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        label_header.setForeground(new java.awt.Color(255, 255, 255));
        label_header.setText("Clientes registrados");
        getContentPane().add(label_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        label_footer.setForeground(new java.awt.Color(0, 0, 0));
        label_footer.setText("Creado por Yader Barahona");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GestionarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GestionarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GestionarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GestionarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_header;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTable table_clientes_registrados;
    // End of variables declaration//GEN-END:variables
}
