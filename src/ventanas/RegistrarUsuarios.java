/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexion;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import java.sql.*;
import javax.swing.WindowConstants;

/**
 *
 * @author Yader Jr
 */
public class RegistrarUsuarios extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarUsuarios
     */
    
    //variable para recuperar el nombre de usuario que viene desde la interfaz login
    String user;

    public RegistrarUsuarios() {
        initComponents();

        // recuperamos en la variable que creaos la variable user de la interfaz login
        user = Login.user;

        setSize(630, 350);
        setResizable(false);
        setTitle("Registrar nuevo usuario - sesión de " + user);
        this.setLocationRelativeTo(null);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");

        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(), label_wallpaper.getHeight(),
                Image.SCALE_DEFAULT));

        label_wallpaper.setIcon(icono);

        this.repaint();
    }

    @Override
    public Image getIconImage() {
        //no necesita especificar la carpeta src el metodo ya sabe que se va a usar un archivo de esta carpeta
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_nombre = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        button_add = new javax.swing.JButton();
        combobox_tipo_nivel = new javax.swing.JComboBox<>();
        label_header = new javax.swing.JLabel();
        label_nombre = new javax.swing.JLabel();
        label_email = new javax.swing.JLabel();
        label_telefono = new javax.swing.JLabel();
        label_username = new javax.swing.JLabel();
        label_password = new javax.swing.JLabel();
        label_footer = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 5));
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nombre.setBackground(new java.awt.Color(153, 153, 255));
        txt_nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 200, 25));

        txt_email.setBackground(new java.awt.Color(153, 153, 255));
        txt_email.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_email.setForeground(new java.awt.Color(255, 255, 255));
        txt_email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_email.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 200, 25));

        txt_telefono.setBackground(new java.awt.Color(153, 153, 255));
        txt_telefono.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_telefono.setForeground(new java.awt.Color(255, 255, 255));
        txt_telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 200, 25));

        txt_username.setBackground(new java.awt.Color(153, 153, 255));
        txt_username.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_username.setForeground(new java.awt.Color(255, 255, 255));
        txt_username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_username.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 200, 25));

        button_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });
        getContentPane().add(button_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 120, 80));

        combobox_tipo_nivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Capturista", "Tecnico" }));
        combobox_tipo_nivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_tipo_nivelActionPerformed(evt);
            }
        });
        getContentPane().add(combobox_tipo_nivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        label_header.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        label_header.setForeground(new java.awt.Color(255, 255, 255));
        label_header.setText("Registro de usuarios");
        getContentPane().add(label_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        label_nombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_nombre.setForeground(new java.awt.Color(255, 255, 255));
        label_nombre.setText("Nombre:");
        getContentPane().add(label_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        label_email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_email.setForeground(new java.awt.Color(255, 255, 255));
        label_email.setText("Correo electrónico:");
        getContentPane().add(label_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        label_telefono.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_telefono.setForeground(new java.awt.Color(255, 255, 255));
        label_telefono.setText("Télefono:");
        getContentPane().add(label_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        label_username.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_username.setForeground(new java.awt.Color(255, 255, 255));
        label_username.setText("Nombre de usuario:");
        getContentPane().add(label_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, -1));

        label_password.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_password.setForeground(new java.awt.Color(255, 255, 255));
        label_password.setText("Contraseña:");
        getContentPane().add(label_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, -1, -1));

        label_footer.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        label_footer.setText("Creado por Yader Barahona");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, -1, -1));

        txt_password.setBackground(new java.awt.Color(153, 153, 255));
        txt_password.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 200, 25));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Permisos de:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        label_wallpaper.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed

        //variables para el combobox, y una de tipo bandera
        int permisos_combo, validacion = 0;
        //variables para guardar los datos que el usuario haya ingresado mediante los txt
        String nombre, email, telefono, username, pass, permisos_string = "";

        //obtenemos lo que ingresó mediante el txt y por el metodo getTex
        nombre = txt_nombre.getText().trim();
        email = txt_email.getText().trim();
        telefono = txt_telefono.getText().trim();
        username = txt_username.getText().trim();
        pass = txt_password.getText().trim();

        //variable para recuperar la seleccion del combobox
        //+1 para que no inicie en 0 ya que por indice inicia en 0 como los arrays
        permisos_combo = combobox_tipo_nivel.getSelectedIndex() + 1;

        //validacion de texto para que no queden vacios
        //si nombre es igual a vacio
        if (nombre.equals(""))
        {
            txt_nombre.setBackground(Color.red);
            //variable bandera para verificar si la condicion se cumple, si no vale 0 está vacio
            validacion++;
        }

        if (email.equals(""))
        {
            txt_email.setBackground(Color.red);
            validacion++;
        }

        if (telefono.equals(""))
        {
            txt_telefono.setBackground(Color.red);
            validacion++;
        }

        if (username.equals(""))
        {
            txt_username.setBackground(Color.red);
            validacion++;
        }

        if (pass.equals(""))
        {
            txt_password.setBackground(Color.red);
            validacion++;
        }

        //condicional anidada combobox mediante el indice 1,2,3 para saber que campo seleccionó
        if (permisos_combo == 1)
        {
            permisos_string = "Administrador";

        } else if (permisos_combo == 2)
        {
            permisos_string = "Capturista";

        } else if (permisos_combo == 3)
        {
            permisos_string = "Tecnico";

        }

        //verificacion para que no haya usernames iguales
        try
        {

            Connection cn = Conexion.db();

            PreparedStatement pst = cn.prepareStatement(
                    //instruccion para que seleccione el nombre de usuario de la tabla de usuarios donde el nombre de usuario sea igual a lo que esta tratando de registrar
                    "select username from usuarios where username = '" + username + "'");

            ResultSet rs = pst.executeQuery();

            if (rs.next())
            {
                //si el usuario es igual cambiamos el color del txt a rojo en señal a error
                txt_username.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "Nombre de usuario no disponible");

                //cierre de la conexion a la db
                cn.close();
            } else
            {

                //cierre de la conexion a la db pero del else entoces la del if no funciona en este
                cn.close();

                //condicional si la variable bandera es 0 entonces todos los campos estan llenos
                if (validacion == 0)
                {

                    try
                    {
                        //volvemos a hacer una nueva conexion a la db con un objeto distinto, pero este caso para el ingreso de los datos ya que el anterior era para verificar el username no fuese igual
                        Connection cn2 = Conexion.db();
                        //instruccion hacia la db para insertar todos los datos hacia la tabla usuarios
                        //9 (?) ya que son todos los campos o columnas que contieene la tabla usuarios
                        PreparedStatement pst2 = cn2.prepareStatement("insert into usuarios values (?,?,?,?,?,?,?,?,?)");

                        //ingresamos a la db cada campo de los datos introducidos por el usuario mediante el metodo setString con el objeto pst2
                        //columna (1) y el dato (0) -> para el id
                        //columna (2) y el dato (nombre) -> para el nombre y asi sucesivamente
                        pst2.setInt(1, 0);
                        pst2.setString(2, nombre);
                        pst2.setString(3, email);
                        pst2.setString(4, telefono);
                        pst2.setString(5, username);
                        pst2.setString(6, pass);
                        pst2.setString(7, permisos_string);
                        pst2.setString(8, "Activo");
                        pst2.setString(9, user);

                        //realizamos el ingreso de datos mediante el metodo executeUpdate con el objeto pst2
                        pst2.executeUpdate();
                        //cerramos la conexion a la db
                        cn2.close();

                        //metodo para limpiar los campos
                        Limpiar();

                        //metodo para cambiar el color luego de realizado el ingreso con exito
                        txt_nombre.setBackground(Color.green);
                        txt_email.setBackground(Color.green);
                        txt_telefono.setBackground(Color.green);
                        txt_username.setBackground(Color.green);
                        txt_password.setBackground(Color.green);

                        JOptionPane.showMessageDialog(null, "Usuario registrado con exito");
                        //metodo para eliminar objetos y liberar recursos
                        //y para que la interfaz se cierre al final del registro
                        this.dispose();

                    } catch (HeadlessException | SQLException e)
                    {

                        //mensaje de error en consola para el programador
                        System.err.println("Error en validar nombre de usuario" + e);
                         //mensaje de error por optionpane para el usuario
                        JOptionPane.showMessageDialog(null, "Error en crear el usuario, contacte con el administrador");

                    }

                } else
                {
                    //mensaje por si el usuario no llena todos los campos
                    JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
                }

            }
        } catch (HeadlessException | SQLException e)
        {
            //mensaje de error por si hay un problema en la conexion con la db por consola para el programador
            System.err.println("Error en validar nombre de usuario" + e);
               //mensaje de error por si hay un problema en la conexion con la db por optionpane hacia el usuario
            JOptionPane.showMessageDialog(null, "Error en crear el usuario, contacte con el administrador");
        }


    }//GEN-LAST:event_button_addActionPerformed

    private void combobox_tipo_nivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_tipo_nivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_tipo_nivelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JComboBox<String> combobox_tipo_nivel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel label_email;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_header;
    private javax.swing.JLabel label_nombre;
    private javax.swing.JLabel label_password;
    private javax.swing.JLabel label_telefono;
    private javax.swing.JLabel label_username;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables

    public void Limpiar() {
        txt_nombre.setText("");
        txt_email.setText("");
        txt_telefono.setText("");
        txt_username.setText("");
        txt_password.setText("");
        
        combobox_tipo_nivel.setSelectedIndex(0);
    }

}
